<h1 id="lab-exploration-of-builtin-modules--os-path-and-fs">Lab: Exploration of builtin modules â€“ os, path and fs</h1>
<h2 id="objectives">Objectives</h2>
<ul>
<li>Learn how built-in modules provide essential functionalities</li>
<li>Grasp the benefits of using built-in modules over creating custom code</li>
<li>Use functions like <code>os.platform()</code>, <code>os.hostname()</code>, <code>os.cpus()</code>, and <code>os.freemem()</code></li>
<li>Use functions like <code>path.join()</code>, <code>path.dirname()</code>, <code>path.basename()</code>, and <code>path.extname()</code></li>
<li>Use functions like <code>fs.readFile()</code>, <code>fs.writeFile()</code>, <code>fs.mkdir()</code>, and <code>fs.readdir()</code></li>
</ul>
<h2 id="tasks">Tasks</h2>
<h3 id="task-1-explore-the-os-module">Task 1: Explore the <code>os</code> module</h3>
<ul>
<li>Print the operating system platform, hostname, number of CPUs, and free memory using the <code>os</code> module</li>
</ul>
<div class="sourceCode" id="cb1"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true"></a><span class="kw">const</span> os <span class="op">=</span> <span class="pp">require</span>(<span class="st">&#39;os&#39;</span>)<span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Operating System:&#39;</span><span class="op">,</span> os<span class="op">.</span><span class="fu">platform</span>())<span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Hostname:&#39;</span><span class="op">,</span> os<span class="op">.</span><span class="fu">hostname</span>())<span class="op">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Number of CPUs:&#39;</span><span class="op">,</span> os<span class="op">.</span><span class="fu">cpus</span>()<span class="op">.</span><span class="at">length</span>)<span class="op">;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Free Memory:&#39;</span><span class="op">,</span> os<span class="op">.</span><span class="fu">freemem</span>() <span class="op">/</span> (<span class="dv">1024</span> <span class="op">*</span> <span class="dv">1024</span>) <span class="op">+</span> <span class="st">&#39; MB&#39;</span>)<span class="op">;</span></span></code></pre></div>
<h3 id="task-2-explore-the-path-module">Task 2: Explore the <code>path</code> module</h3>
<ul>
<li>Join paths, extract directory names, base names, and extensions</li>
</ul>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true"></a><span class="kw">const</span> path <span class="op">=</span> <span class="pp">require</span>(<span class="st">&#39;path&#39;</span>)<span class="op">;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true"></a></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true"></a><span class="kw">const</span> filePath <span class="op">=</span> <span class="st">&#39;/path/to/file.txt&#39;</span><span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true"></a></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Joined Path:&#39;</span><span class="op">,</span> path<span class="op">.</span><span class="fu">join</span>(<span class="st">&#39;directory&#39;</span><span class="op">,</span> <span class="st">&#39;file.txt&#39;</span>))<span class="op">;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Directory Name:&#39;</span><span class="op">,</span> path<span class="op">.</span><span class="fu">dirname</span>(filePath))<span class="op">;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Base Name:&#39;</span><span class="op">,</span> path<span class="op">.</span><span class="fu">basename</span>(filePath))<span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true"></a><span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Extension:&#39;</span><span class="op">,</span> path<span class="op">.</span><span class="fu">extname</span>(filePath))<span class="op">;</span></span></code></pre></div>
<h3 id="task-3-explore-the-fs-module">Task 3: Explore the <code>fs</code> module</h3>
<ul>
<li>Read and write files, create directories, and list directory contents</li>
</ul>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true"></a><span class="kw">const</span> fs <span class="op">=</span> <span class="pp">require</span>(<span class="st">&#39;fs&#39;</span>)<span class="op">;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true"></a></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true"></a>fs<span class="op">.</span><span class="fu">readFile</span>(<span class="st">&#39;file.txt&#39;</span><span class="op">,</span> <span class="st">&#39;utf8&#39;</span><span class="op">,</span> (err<span class="op">,</span> data) <span class="kw">=&gt;</span> {</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true"></a>  <span class="cf">if</span> (err) <span class="cf">throw</span> err<span class="op">;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true"></a>  <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(data)<span class="op">;</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true"></a>})<span class="op">;</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true"></a></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true"></a>fs<span class="op">.</span><span class="fu">writeFile</span>(<span class="st">&#39;new_file.txt&#39;</span><span class="op">,</span> <span class="st">&#39;Hello, World!&#39;</span><span class="op">,</span> (err) <span class="kw">=&gt;</span> {</span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true"></a>  <span class="cf">if</span> (err) <span class="cf">throw</span> err<span class="op">;</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true"></a>  <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;File written successfully&#39;</span>)<span class="op">;</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true"></a>})<span class="op">;</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true"></a></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true"></a>fs<span class="op">.</span><span class="fu">mkdir</span>(<span class="st">&#39;new_directory&#39;</span><span class="op">,</span> (err) <span class="kw">=&gt;</span> {</span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true"></a>  <span class="cf">if</span> (err) <span class="cf">throw</span> err<span class="op">;</span></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true"></a>  <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Directory created&#39;</span>)<span class="op">;</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true"></a>})<span class="op">;</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true"></a></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true"></a>fs<span class="op">.</span><span class="fu">readdir</span>(<span class="st">&#39;directory&#39;</span><span class="op">,</span> (err<span class="op">,</span> files) <span class="kw">=&gt;</span> {</span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true"></a>  <span class="cf">if</span> (err) <span class="cf">throw</span> err<span class="op">;</span></span>
<span id="cb3-20"><a href="#cb3-20" aria-hidden="true"></a>  <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(files)<span class="op">;</span></span>
<span id="cb3-21"><a href="#cb3-21" aria-hidden="true"></a>})<span class="op">;</span></span></code></pre></div>
<h3 id="task-4-creating-the-logger-using-events-module">Task 4: Creating the logger using events module</h3>
<ul>
<li>As with previous lab, create a logger using events module</li>
</ul>
<p><img src="./images/image4-1.png" /></p>
<ul>
<li>Use the <code>logger</code> in <code>app</code></li>
</ul>
<p><img src="./images/image4-2.png" /></p>
<h2 id="output">Output</h2>
<p><img src="./images/image4-3.png" /></p>
