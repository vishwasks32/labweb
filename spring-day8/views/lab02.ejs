<h1 id="lab-dockerizing-the-products-app">Lab: Dockerizing the products app</h1>
<h2 id="objective">Objective</h2>
<p>Dockerize the <code>productsapp</code> to create a self-contained, portable, and reproducible environment for development, testing, and deployment.</p>
<h2 id="tasks">Tasks</h2>
<h3 id="task-1-prepare-the-productsapp-application">Task 1: Prepare the Productsapp Application</h3>
<p>Clean the app and create a fresh jar</p>
<ul>
<li>Open &amp; run maven clean &amp; install using gui</li>
</ul>
<p><img src="./images/image2-1.png" /></p>
<p><img src="./images/image2-2.png" /></p>
<ul>
<li>Or using Terminal (On windows)</li>
</ul>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true"></a><span class="ex">.</span>\mvnw.cmd clean install</span></code></pre></div>
<p><img src="./images/image2-3.png" /></p>
<p><img src="./images/image2-4.png" /></p>
<h3 id="task-2-prepare-the-dockerfile">Task 2: Prepare the dockerFile</h3>
<p>Create the Dockerfile &amp; enter the code below</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true"></a><span class="ex">FROM</span> openjdk:21-jdk</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true"></a><span class="ex">ARG</span> JAR_FILE=target/*.jar</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true"></a><span class="ex">COPY</span> ./target/productsappv2-0.0.1-SNAPSHOT.jar app.jar</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true"></a><span class="ex">ENTRYPOINT</span> [<span class="st">&quot;java&quot;</span>,<span class="st">&quot;-jar&quot;</span>,<span class="st">&quot;/app.jar&quot;</span>]</span></code></pre></div>
<h3 id="task-3-build-the-docker-image">Task 3: Build the docker image</h3>
<p>To build the docker image you can use the command</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true"></a><span class="ex">docker</span> build -t productsapp:latest .</span></code></pre></div>
<p>Here the tagname for the app is <code>productsapp:latest</code></p>
<p><img src="./images/image2-5.png" /></p>
<p>You can also see the image in docker desktop(windows)</p>
<p><img src="./images/image2-6.png" /></p>
<p><img src="./images/image2-7.png" /></p>
<h3 id="task-4-run-the-docker-container">Task 4: Run the docker Container</h3>
<ul>
<li>Use the docker run command to create and run a container from the built image.</li>
<li>Map the container's port to a host port to access the application.</li>
</ul>
<div class="sourceCode" id="cb4"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true"></a><span class="ex">docker</span> run -d -p 8080:8080 --name myproductsapp productsapp:latest</span></code></pre></div>
<p><img src="./images/image2-8.png" /></p>
<p>When this is run, it will result in error as docker image depends on mysqldb, to run mysqldb again as docker create a docker-compose.yaml</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode yaml"><code class="sourceCode yaml"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true"></a><span class="fu">version</span><span class="kw">:</span><span class="at"> </span><span class="st">&quot;3.7&quot;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true"></a><span class="fu">services</span><span class="kw">:</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true"></a><span class="at">  </span><span class="fu">api_service</span><span class="kw">:</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true"></a><span class="at">    </span><span class="fu">build</span><span class="kw">:</span><span class="at"> .</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true"></a><span class="at">    </span><span class="fu">restart</span><span class="kw">:</span><span class="at"> always</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true"></a><span class="at">    </span><span class="fu">ports</span><span class="kw">:</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true"></a><span class="at">      </span><span class="kw">-</span><span class="at"> 8080:8080</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true"></a><span class="at">    </span><span class="fu">networks</span><span class="kw">:</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true"></a><span class="at">      </span><span class="kw">-</span><span class="at"> productsappmysql-net</span></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true"></a><span class="at">    </span><span class="fu">environment</span><span class="kw">:</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true"></a><span class="at">      </span><span class="kw">-</span><span class="at"> spring.datasource.url=jdbc:mysql://mysqldb:3306/productsapp?allowPublicKeyRetrieval=true    </span></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true"></a><span class="at">    </span><span class="fu">depends_on</span><span class="kw">:</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true"></a><span class="at">      </span><span class="kw">-</span><span class="at"> mysqldb</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true"></a><span class="at">    </span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true"></a><span class="at">    </span><span class="fu">volumes</span><span class="kw">:</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true"></a><span class="at">      </span><span class="kw">-</span><span class="at"> .m2:/root/.m2</span></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true"></a><span class="at">      </span></span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true"></a><span class="at">  </span><span class="fu">mysqldb</span><span class="kw">:</span></span>
<span id="cb5-19"><a href="#cb5-19" aria-hidden="true"></a><span class="at">    </span><span class="fu">image</span><span class="kw">:</span><span class="at"> </span><span class="st">&quot;mysql:8.0&quot;</span></span>
<span id="cb5-20"><a href="#cb5-20" aria-hidden="true"></a><span class="at">    </span><span class="fu">restart</span><span class="kw">:</span><span class="at"> always</span></span>
<span id="cb5-21"><a href="#cb5-21" aria-hidden="true"></a><span class="at">    </span><span class="fu">ports</span><span class="kw">:</span></span>
<span id="cb5-22"><a href="#cb5-22" aria-hidden="true"></a><span class="at">      </span><span class="kw">-</span><span class="at"> 3306:3306</span></span>
<span id="cb5-23"><a href="#cb5-23" aria-hidden="true"></a><span class="at">    </span><span class="fu">networks</span><span class="kw">:</span></span>
<span id="cb5-24"><a href="#cb5-24" aria-hidden="true"></a><span class="at">      </span><span class="kw">-</span><span class="at"> productsappmysql-net  </span></span>
<span id="cb5-25"><a href="#cb5-25" aria-hidden="true"></a><span class="at">    </span><span class="fu">environment</span><span class="kw">:</span></span>
<span id="cb5-26"><a href="#cb5-26" aria-hidden="true"></a><span class="at">      </span><span class="fu">MYSQL_DATABASE</span><span class="kw">:</span><span class="at"> productsapp</span></span>
<span id="cb5-27"><a href="#cb5-27" aria-hidden="true"></a><span class="at">      </span><span class="fu">MYSQL_ROOT_PASSWORD</span><span class="kw">:</span><span class="at"> root</span></span>
<span id="cb5-28"><a href="#cb5-28" aria-hidden="true"></a><span class="fu">networks</span><span class="kw">:</span></span>
<span id="cb5-29"><a href="#cb5-29" aria-hidden="true"></a><span class="at">  </span><span class="fu">productsappmysql-net</span><span class="kw">:</span></span></code></pre></div>
<p>run the docker-compose</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true"></a><span class="ex">docker-compose</span> up</span></code></pre></div>
<p>Once it is up, you can access your api through thunderclient or postman</p>
